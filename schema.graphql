schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
columns and relationships of "_CategoryToLink"
"""
type _CategoryToLink {
  A: Int!
  B: Int!

  """An object relationship"""
  Category: Category!

  """An object relationship"""
  Link: Link!
}

"""
aggregated selection of "_CategoryToLink"
"""
type _CategoryToLink_aggregate {
  aggregate: _CategoryToLink_aggregate_fields
  nodes: [_CategoryToLink!]!
}

"""
aggregate fields of "_CategoryToLink"
"""
type _CategoryToLink_aggregate_fields {
  avg: _CategoryToLink_avg_fields
  count(columns: [_CategoryToLink_select_column!], distinct: Boolean): Int!
  max: _CategoryToLink_max_fields
  min: _CategoryToLink_min_fields
  stddev: _CategoryToLink_stddev_fields
  stddev_pop: _CategoryToLink_stddev_pop_fields
  stddev_samp: _CategoryToLink_stddev_samp_fields
  sum: _CategoryToLink_sum_fields
  var_pop: _CategoryToLink_var_pop_fields
  var_samp: _CategoryToLink_var_samp_fields
  variance: _CategoryToLink_variance_fields
}

"""
order by aggregate values of table "_CategoryToLink"
"""
input _CategoryToLink_aggregate_order_by {
  avg: _CategoryToLink_avg_order_by
  count: order_by
  max: _CategoryToLink_max_order_by
  min: _CategoryToLink_min_order_by
  stddev: _CategoryToLink_stddev_order_by
  stddev_pop: _CategoryToLink_stddev_pop_order_by
  stddev_samp: _CategoryToLink_stddev_samp_order_by
  sum: _CategoryToLink_sum_order_by
  var_pop: _CategoryToLink_var_pop_order_by
  var_samp: _CategoryToLink_var_samp_order_by
  variance: _CategoryToLink_variance_order_by
}

"""
input type for inserting array relation for remote table "_CategoryToLink"
"""
input _CategoryToLink_arr_rel_insert_input {
  data: [_CategoryToLink_insert_input!]!

  """on conflict condition"""
  on_conflict: _CategoryToLink_on_conflict
}

"""aggregate avg on columns"""
type _CategoryToLink_avg_fields {
  A: Float
  B: Float
}

"""
order by avg() on columns of table "_CategoryToLink"
"""
input _CategoryToLink_avg_order_by {
  A: order_by
  B: order_by
}

"""
Boolean expression to filter rows from the table "_CategoryToLink". All fields are combined with a logical 'AND'.
"""
input _CategoryToLink_bool_exp {
  A: Int_comparison_exp
  B: Int_comparison_exp
  Category: Category_bool_exp
  Link: Link_bool_exp
  _and: [_CategoryToLink_bool_exp!]
  _not: _CategoryToLink_bool_exp
  _or: [_CategoryToLink_bool_exp!]
}

"""
unique or primary key constraints on table "_CategoryToLink"
"""
enum _CategoryToLink_constraint {
  """unique or primary key constraint"""
  _CategoryToLink_AB_unique
}

"""
input type for incrementing numeric columns in table "_CategoryToLink"
"""
input _CategoryToLink_inc_input {
  A: Int
  B: Int
}

"""
input type for inserting data into table "_CategoryToLink"
"""
input _CategoryToLink_insert_input {
  A: Int
  B: Int
  Category: Category_obj_rel_insert_input
  Link: Link_obj_rel_insert_input
}

"""aggregate max on columns"""
type _CategoryToLink_max_fields {
  A: Int
  B: Int
}

"""
order by max() on columns of table "_CategoryToLink"
"""
input _CategoryToLink_max_order_by {
  A: order_by
  B: order_by
}

"""aggregate min on columns"""
type _CategoryToLink_min_fields {
  A: Int
  B: Int
}

"""
order by min() on columns of table "_CategoryToLink"
"""
input _CategoryToLink_min_order_by {
  A: order_by
  B: order_by
}

"""
response of any mutation on the table "_CategoryToLink"
"""
type _CategoryToLink_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [_CategoryToLink!]!
}

"""
on conflict condition type for table "_CategoryToLink"
"""
input _CategoryToLink_on_conflict {
  constraint: _CategoryToLink_constraint!
  update_columns: [_CategoryToLink_update_column!]! = []
  where: _CategoryToLink_bool_exp
}

"""Ordering options when selecting data from "_CategoryToLink"."""
input _CategoryToLink_order_by {
  A: order_by
  B: order_by
  Category: Category_order_by
  Link: Link_order_by
}

"""
select columns of table "_CategoryToLink"
"""
enum _CategoryToLink_select_column {
  """column name"""
  A

  """column name"""
  B
}

"""
input type for updating data in table "_CategoryToLink"
"""
input _CategoryToLink_set_input {
  A: Int
  B: Int
}

"""aggregate stddev on columns"""
type _CategoryToLink_stddev_fields {
  A: Float
  B: Float
}

"""
order by stddev() on columns of table "_CategoryToLink"
"""
input _CategoryToLink_stddev_order_by {
  A: order_by
  B: order_by
}

"""aggregate stddev_pop on columns"""
type _CategoryToLink_stddev_pop_fields {
  A: Float
  B: Float
}

"""
order by stddev_pop() on columns of table "_CategoryToLink"
"""
input _CategoryToLink_stddev_pop_order_by {
  A: order_by
  B: order_by
}

"""aggregate stddev_samp on columns"""
type _CategoryToLink_stddev_samp_fields {
  A: Float
  B: Float
}

"""
order by stddev_samp() on columns of table "_CategoryToLink"
"""
input _CategoryToLink_stddev_samp_order_by {
  A: order_by
  B: order_by
}

"""aggregate sum on columns"""
type _CategoryToLink_sum_fields {
  A: Int
  B: Int
}

"""
order by sum() on columns of table "_CategoryToLink"
"""
input _CategoryToLink_sum_order_by {
  A: order_by
  B: order_by
}

"""
update columns of table "_CategoryToLink"
"""
enum _CategoryToLink_update_column {
  """column name"""
  A

  """column name"""
  B
}

"""aggregate var_pop on columns"""
type _CategoryToLink_var_pop_fields {
  A: Float
  B: Float
}

"""
order by var_pop() on columns of table "_CategoryToLink"
"""
input _CategoryToLink_var_pop_order_by {
  A: order_by
  B: order_by
}

"""aggregate var_samp on columns"""
type _CategoryToLink_var_samp_fields {
  A: Float
  B: Float
}

"""
order by var_samp() on columns of table "_CategoryToLink"
"""
input _CategoryToLink_var_samp_order_by {
  A: order_by
  B: order_by
}

"""aggregate variance on columns"""
type _CategoryToLink_variance_fields {
  A: Float
  B: Float
}

"""
order by variance() on columns of table "_CategoryToLink"
"""
input _CategoryToLink_variance_order_by {
  A: order_by
  B: order_by
}

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
columns and relationships of "Category"
"""
type Category implements Node {
  """An array relationship"""
  _CategoryToLinks(
    """distinct select on columns"""
    distinct_on: [_CategoryToLink_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [_CategoryToLink_order_by!]

    """filter the rows returned"""
    where: _CategoryToLink_bool_exp
  ): [_CategoryToLink!]!

  """An aggregate relationship"""
  _CategoryToLinks_aggregate(
    """distinct select on columns"""
    distinct_on: [_CategoryToLink_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [_CategoryToLink_order_by!]

    """filter the rows returned"""
    where: _CategoryToLink_bool_exp
  ): _CategoryToLink_aggregate!
  createdAt: timestamptz!
  id: ID!
  title: String
  type: String
  updatedAt: timestamptz!
}

"""
Boolean expression to filter rows from the table "Category". All fields are combined with a logical 'AND'.
"""
input Category_bool_exp {
  _CategoryToLinks: _CategoryToLink_bool_exp
  _and: [Category_bool_exp!]
  _not: Category_bool_exp
  _or: [Category_bool_exp!]
  createdAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  title: String_comparison_exp
  type: String_comparison_exp
  updatedAt: timestamptz_comparison_exp
}

"""
unique or primary key constraints on table "Category"
"""
enum Category_constraint {
  """unique or primary key constraint"""
  Category_pkey

  """unique or primary key constraint"""
  Category_title_key
}

"""
input type for incrementing numeric columns in table "Category"
"""
input Category_inc_input {
  id: Int
}

"""
input type for inserting data into table "Category"
"""
input Category_insert_input {
  _CategoryToLinks: _CategoryToLink_arr_rel_insert_input
  createdAt: timestamptz
  id: Int
  title: String
  type: String
  updatedAt: timestamptz
}

"""
response of any mutation on the table "Category"
"""
type Category_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Category!]!
}

"""
input type for inserting object relation for remote table "Category"
"""
input Category_obj_rel_insert_input {
  data: Category_insert_input!

  """on conflict condition"""
  on_conflict: Category_on_conflict
}

"""
on conflict condition type for table "Category"
"""
input Category_on_conflict {
  constraint: Category_constraint!
  update_columns: [Category_update_column!]! = []
  where: Category_bool_exp
}

"""Ordering options when selecting data from "Category"."""
input Category_order_by {
  _CategoryToLinks_aggregate: _CategoryToLink_aggregate_order_by
  createdAt: order_by
  id: order_by
  title: order_by
  type: order_by
  updatedAt: order_by
}

"""primary key columns input for table: Category"""
input Category_pk_columns_input {
  id: Int!
}

"""
select columns of table "Category"
"""
enum Category_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  title

  """column name"""
  type

  """column name"""
  updatedAt
}

"""
input type for updating data in table "Category"
"""
input Category_set_input {
  createdAt: timestamptz
  id: Int
  title: String
  type: String
  updatedAt: timestamptz
}

"""
update columns of table "Category"
"""
enum Category_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  title

  """column name"""
  type

  """column name"""
  updatedAt
}

"""
A Relay connection object on "Category"
"""
type CategoryConnection {
  edges: [CategoryEdge!]!
  pageInfo: PageInfo!
}

type CategoryEdge {
  cursor: String!
  node: Category!
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

"""
columns and relationships of "Link"
"""
type Link implements Node {
  """An array relationship"""
  _CategoryToLinks(
    """distinct select on columns"""
    distinct_on: [_CategoryToLink_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [_CategoryToLink_order_by!]

    """filter the rows returned"""
    where: _CategoryToLink_bool_exp
  ): [_CategoryToLink!]!

  """An aggregate relationship"""
  _CategoryToLinks_aggregate(
    """distinct select on columns"""
    distinct_on: [_CategoryToLink_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [_CategoryToLink_order_by!]

    """filter the rows returned"""
    where: _CategoryToLink_bool_exp
  ): _CategoryToLink_aggregate!
  createdAt: timestamptz!
  id: ID!
  incognito: Boolean!
  title: String
  updatedAt: timestamptz!
  url: String
}

"""
Boolean expression to filter rows from the table "Link". All fields are combined with a logical 'AND'.
"""
input Link_bool_exp {
  _CategoryToLinks: _CategoryToLink_bool_exp
  _and: [Link_bool_exp!]
  _not: Link_bool_exp
  _or: [Link_bool_exp!]
  createdAt: timestamptz_comparison_exp
  id: Int_comparison_exp
  incognito: Boolean_comparison_exp
  title: String_comparison_exp
  updatedAt: timestamptz_comparison_exp
  url: String_comparison_exp
}

"""
unique or primary key constraints on table "Link"
"""
enum Link_constraint {
  """unique or primary key constraint"""
  Link_pkey

  """unique or primary key constraint"""
  Link_url_key
}

"""
input type for incrementing numeric columns in table "Link"
"""
input Link_inc_input {
  id: Int
}

"""
input type for inserting data into table "Link"
"""
input Link_insert_input {
  _CategoryToLinks: _CategoryToLink_arr_rel_insert_input
  createdAt: timestamptz
  id: Int
  incognito: Boolean
  title: String
  updatedAt: timestamptz
  url: String
}

"""
response of any mutation on the table "Link"
"""
type Link_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [Link!]!
}

"""
input type for inserting object relation for remote table "Link"
"""
input Link_obj_rel_insert_input {
  data: Link_insert_input!

  """on conflict condition"""
  on_conflict: Link_on_conflict
}

"""
on conflict condition type for table "Link"
"""
input Link_on_conflict {
  constraint: Link_constraint!
  update_columns: [Link_update_column!]! = []
  where: Link_bool_exp
}

"""Ordering options when selecting data from "Link"."""
input Link_order_by {
  _CategoryToLinks_aggregate: _CategoryToLink_aggregate_order_by
  createdAt: order_by
  id: order_by
  incognito: order_by
  title: order_by
  updatedAt: order_by
  url: order_by
}

"""primary key columns input for table: Link"""
input Link_pk_columns_input {
  id: Int!
}

"""
select columns of table "Link"
"""
enum Link_select_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  incognito

  """column name"""
  title

  """column name"""
  updatedAt

  """column name"""
  url
}

"""
input type for updating data in table "Link"
"""
input Link_set_input {
  createdAt: timestamptz
  id: Int
  incognito: Boolean
  title: String
  updatedAt: timestamptz
  url: String
}

"""
update columns of table "Link"
"""
enum Link_update_column {
  """column name"""
  createdAt

  """column name"""
  id

  """column name"""
  incognito

  """column name"""
  title

  """column name"""
  updatedAt

  """column name"""
  url
}

"""
A Relay connection object on "Link"
"""
type LinkConnection {
  edges: [LinkEdge!]!
  pageInfo: PageInfo!
}

type LinkEdge {
  cursor: String!
  node: Link!
}

"""mutation root"""
type mutation_root {
  """
  delete data from the table: "Category"
  """
  delete_Category(
    """filter the rows which have to be deleted"""
    where: Category_bool_exp!
  ): Category_mutation_response

  """
  delete single row from the table: "Category"
  """
  delete_Category_by_pk(id: Int!): Category

  """
  delete data from the table: "Link"
  """
  delete_Link(
    """filter the rows which have to be deleted"""
    where: Link_bool_exp!
  ): Link_mutation_response

  """
  delete single row from the table: "Link"
  """
  delete_Link_by_pk(id: Int!): Link

  """
  delete data from the table: "_CategoryToLink"
  """
  delete__CategoryToLink(
    """filter the rows which have to be deleted"""
    where: _CategoryToLink_bool_exp!
  ): _CategoryToLink_mutation_response

  """
  insert data into the table: "Category"
  """
  insert_Category(
    """the rows to be inserted"""
    objects: [Category_insert_input!]!

    """on conflict condition"""
    on_conflict: Category_on_conflict
  ): Category_mutation_response

  """
  insert a single row into the table: "Category"
  """
  insert_Category_one(
    """the row to be inserted"""
    object: Category_insert_input!

    """on conflict condition"""
    on_conflict: Category_on_conflict
  ): Category

  """
  insert data into the table: "Link"
  """
  insert_Link(
    """the rows to be inserted"""
    objects: [Link_insert_input!]!

    """on conflict condition"""
    on_conflict: Link_on_conflict
  ): Link_mutation_response

  """
  insert a single row into the table: "Link"
  """
  insert_Link_one(
    """the row to be inserted"""
    object: Link_insert_input!

    """on conflict condition"""
    on_conflict: Link_on_conflict
  ): Link

  """
  insert data into the table: "_CategoryToLink"
  """
  insert__CategoryToLink(
    """the rows to be inserted"""
    objects: [_CategoryToLink_insert_input!]!

    """on conflict condition"""
    on_conflict: _CategoryToLink_on_conflict
  ): _CategoryToLink_mutation_response

  """
  insert a single row into the table: "_CategoryToLink"
  """
  insert__CategoryToLink_one(
    """the row to be inserted"""
    object: _CategoryToLink_insert_input!

    """on conflict condition"""
    on_conflict: _CategoryToLink_on_conflict
  ): _CategoryToLink

  """
  update data of the table: "Category"
  """
  update_Category(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Category_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Category_set_input

    """filter the rows which have to be updated"""
    where: Category_bool_exp!
  ): Category_mutation_response

  """
  update single row of the table: "Category"
  """
  update_Category_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Category_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Category_set_input
    pk_columns: Category_pk_columns_input!
  ): Category

  """
  update data of the table: "Link"
  """
  update_Link(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Link_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Link_set_input

    """filter the rows which have to be updated"""
    where: Link_bool_exp!
  ): Link_mutation_response

  """
  update single row of the table: "Link"
  """
  update_Link_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: Link_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: Link_set_input
    pk_columns: Link_pk_columns_input!
  ): Link

  """
  update data of the table: "_CategoryToLink"
  """
  update__CategoryToLink(
    """increments the numeric columns with given value of the filtered values"""
    _inc: _CategoryToLink_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: _CategoryToLink_set_input

    """filter the rows which have to be updated"""
    where: _CategoryToLink_bool_exp!
  ): _CategoryToLink_mutation_response
}

"""An object with globally unique ID"""
interface Node {
  """A globally unique identifier"""
  id: ID!
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type PageInfo {
  endCursor: String!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String!
}

type query_root {
  """
  fetch data from the table: "Category"
  """
  Category_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Category_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Category_order_by!]

    """filter the rows returned"""
    where: Category_bool_exp
  ): CategoryConnection!

  """
  fetch data from the table: "Link"
  """
  Link_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Link_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Link_order_by!]

    """filter the rows returned"""
    where: Link_bool_exp
  ): LinkConnection!
  node(
    """A globally unique id"""
    id: ID!
  ): Node
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

type subscription_root {
  """
  fetch data from the table: "Category"
  """
  Category_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Category_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Category_order_by!]

    """filter the rows returned"""
    where: Category_bool_exp
  ): CategoryConnection!

  """
  fetch data from the table: "Link"
  """
  Link_connection(
    after: String
    before: String

    """distinct select on columns"""
    distinct_on: [Link_select_column!]
    first: Int
    last: Int

    """sort the rows by one or more columns"""
    order_by: [Link_order_by!]

    """filter the rows returned"""
    where: Link_bool_exp
  ): LinkConnection!
  node(
    """A globally unique id"""
    id: ID!
  ): Node
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

